@model IEnumerable<Project_of_Sharan.Models.Review>

@{
    ViewData["Title"] = "All Reviews";
}

<h1 class="text-center">@ViewData["Title"]</h1>

<form method="get" class="form-inline mb-4">
    <div class="form-group mr-3">
        <label for="searchTerm" class="mr-2">Search Reviews:</label>
        <input type="text" class="form-control" id="searchTerm" name="searchTerm"
               placeholder="Search by coffee shop, review text, or username"
               value="@Context.Request.Query["searchTerm"]" />
        <button type="submit" class="btn btn-primary ml-2">Search</button>
    </div>
</form>

<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            <th>Coffee Shop/Item</th>
            <th>Rating</th>
            <th>Review</th>
            <th>Date Posted</th>
            <th>Image</th>
            <th>Username</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var review in Model)
        {
            <tr>
                <td>@review.CoffeeShopItemName</td>
                <td>@review.Rating ★</td>
                <td>
                    @if (review.ReviewText.Length > 50)
                    {
                        @review.ReviewText.Substring(0, 50)
                        <span>...</span>
                        <a href="#" onclick="alert('@review.ReviewText'); return false;">Read More</a>
                    }
                    else
                    {
                        @review.ReviewText
                    }
                </td>
                <td>@review.DatePosted.ToString("yyyy-MM-dd")</td>
                <td>
                    @if (review.ReviewImages != null && review.ReviewImages.Any())
                    {
                        @foreach (var image in review.ReviewImages)
                        {
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(image.ImageData)" alt="Review Image" class="img-thumbnail" style="max-width: 100px; max-height: 100px;" />
                        }
                    }
                    else
                    {
                        <p class="text-muted">No image available</p>
                    }
                </td>
                <td>@review.User?.Username</td> <!-- Displaying the associated username -->
            </tr>
        }
    </tbody>
</table>
@{
    var successMessage = ViewData["SweetAlertSuccessMessage"] as string;
    var errorMessage = ViewData["SweetAlertErrorMessage"] as string;
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.all.min.js"></script>

    @if (!string.IsNullOrEmpty(successMessage))
    {
        <script>
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: '@successMessage',
                showConfirmButton: true
            });
        </script>
    }

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <script>
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: '@errorMessage',
                showConfirmButton: true
            });
        </script>
    }
}
